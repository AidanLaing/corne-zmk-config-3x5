/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        homerowleft: homerowleft {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWLEFT";
            #binding-cells = <2>;
            hold-trigger-key-positions = <36 37 38 39 40 41 6 18 30 31 19 7 8 20 32 33 21 9 10 22 34 35 23 11>;
            hold-trigger-on-release;
            flavor = "balanced";
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
        };

        homerowright: homerowright {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWRIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_gaming {
            bindings = <&tog 7>;
            key-positions = <1 25 10 34>;
            layers = <0>;
        };

        toggle_base {
            bindings = <&tog 0>;
            key-positions = <1 25 10 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                    &kp W                    &kp E                 &kp R                      &kp T        &kp Y        &kp U                        &kp I                  &kp O                      &kp P                              &none
&none  &homerowleft LEFT_GUI A  &homerowleft LEFT_ALT S  &homerowleft LCTRL D  &homerowleft LEFT_SHIFT F  &kp G        &kp H        &homerowright RIGHT_SHIFT J  &homerowright RCTRL K  &homerowright RIGHT_ALT L  &homerowright RIGHT_GUI SEMICOLON  &none
&none  &kp Z                    &kp X                    &kp C                 &kp V                      &kp B        &kp N        &kp M                        &kp COMMA              &kp DOT                    &kp SLASH                          &none
                                                         &lt 2 ESCAPE          &lt 1 SPACE                &lt 6 TAB    &lt 4 ENTER  &lt 3 DELETE                 &lt 5 BACKSPACE
            >;
        };

        nav {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp CAPSLOCK    &kp INSERT      &kp PRINTSCREEN  &kp KP_NUMLOCK  &kp SCROLLLOCK   &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT       &none            &none
&none  &none         &none         &none      &none           &none    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP      &kp END         &kp PAUSE_BREAK  &none
                                   &none      &none           &none    &kp RETURN      &kp DELETE      &kp BACKSPACE
            >;
        };

        media {
            bindings = <
&none  &none         &none         &none      &none           &none    &ext_power EP_TOG  &none              &none            &none               &none  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp C_RW           &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_FAST_FORWARD  &none  &none
&none  &none         &none         &none      &none           &none    &out OUT_TOG       &bt BT_NXT         &bt BT_PRV       &bt BT_CLR_ALL      &none  &none
                                   &none      &none           &none    &kp C_STOP         &kp C_NEXT         &kp C_MUTE
            >;
        };

        number {
            bindings = <
&none  &kp LEFT_BRACKET  &kp N7  &kp N8      &kp N9  &kp RIGHT_BRACKET    &none  &none      &none      &none     &none     &none
&none  &kp SINGLE_QUOTE  &kp N4  &kp N5      &kp N6  &kp EQUAL            &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
&none  &kp GRAVE         &kp N1  &kp N2      &kp N3  &kp BACKSLASH        &none  &none      &none      &none     &none     &none
                                 &kp PERIOD  &kp N0  &kp MINUS            &none  &none      &none
            >;
        };

        symbol {
            bindings = <
&trans  &kp LEFT_BRACE     &kp AMPS    &kp ASTRK             &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp DOUBLE_QUOTES  &kp DOLLAR  &kp PERCENT           &kp CARET              &kp PLUS           &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp TILDE          &kp EXCL    &kp AT                &kp HASH               &kp PIPE           &trans  &trans     &trans     &trans    &trans    &trans
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &trans     &trans
            >;
        };

        function {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8      &kp F9     &kp F15    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &kp F14    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp F13    &trans  &trans     &trans     &trans    &trans    &trans
                         &kp ESCAPE  &kp SPACE  &kp TAB    &trans  &trans     &trans
            >;
        };

        utility {
            bindings = <
&none  &kp F21       &kp F22       &kp F23    &kp F24         &none    &none       &none             &none          &none               &none       &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp K_CUT   &kp K_COPY        &kp K_PASTE    &kp K_UNDO          &kp K_REDO  &none
&none  &none         &none         &none      &none           &none    &kp K_WWW   &kp K_CALCULATOR  &kp K_EDIT     &kp K_CONTEXT_MENU  &kp K_FIND  &none
                                   &none      &none           &none    &kp RETURN  &kp DELETE        &kp BACKSPACE
            >;
        };

        gaming {
            bindings = <
&none  &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y    &kp U      &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D     &kp F      &kp G        &kp H    &kp J      &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LALT  &kp SPACE  &kp LSHFT    &kp RET  &kp RCTRL  &kp TAB
            >;
        };
    };
};
